<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration PUBLIC "-//APACHE//DTD LOG4J 1.2//EN" "log4j.dtd">
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

	<!-- Appenders -->
	<appender name="console" class="org.apache.log4j.ConsoleAppender">
		<param name="Target" value="System.out" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-5p: %c{1} - %m%n" />
		</layout>
	</appender>
	
	<!-- 파일에 로그를 출력할 수 있게 하는 설정 -->	
	<appender name="fileLogger" class="org.apache.log4j.DailyRollingFileAppender">
		<param name="file" 
		value="D:/springProject/workspace/testSpringProject/src/main/resources/logs/login.log"/>
		<!-- 덮어쓰지 않고 추가 하도록 -->
		<param name="Append" value="true"/>
		<!-- 날짜가 바뀌면 확장저명 뒤에 붙을 이름을 날짜로 지정하겠다는 내용 -->
		<param name="DataPattern" value="'-'yyyy-MM-dd"/>
		<!-- 실제로 로그가 출력될 포맷을 잡아주는 태그 -->
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="[%d{HH:mm:ss}][%-5p](%F:%L) - %m%n"/>
		</layout>
	</appender>
	
	
	
	<!-- 단계별 로그 -->
	<!-- %p = debug, info, warn, error, fatal 등의 priority 가 출력된다. -->
	<!-- %m = 로그 내용이 출력 -->
	<!-- %d = 로깅 이벤트가 발생한 시간을 기록 -->
	<!--   	    포맷은 %{HH:mm:ss, SSS} 같은 형태로 사용되며  SimpleDateFormat에 포맷팅을  따른다.-->
	<!-- %t = 로그이벤트가 발생한 쓰레드의 이름을 출력-->
	<!-- %% = % 표시를 출력하기 위해 사용 -->
	<!-- %n = 플랫폼에 종속된 개행문자가 출력 -->
	<!-- %c, %C = 카테고리 표시  // 풀 클래스명을 뜻함-->
	<!--  		ex) %c => a.b.c 처럼 되어있다면, a.b.c라고 출력-->
	<!-- 			%c{2} => b.c 처럼 출력 -->
	<!-- %F	= 로깅이 발생한 프로그램 파일명을 나타냄 -->
	<!-- %l = 로깅이 발생한 caller의 정보를 나타냄 -->
	<!-- %L = 로깅이 발생한 caller의 라인수를 나타냄 -->
	<!-- %M = 로깅이 발생한 method의 이름을 나타냄 -->
	<!-- %r = 어플리케이션이 시작된 이후로부터 로깅이 발생한 시점의 시간(ms) -->
	<!--  -->
	
	<!-- Application Loggers -->
	<logger name="com.test.tsp">
		<level value="info" />
	</logger>
	
	<!-- 3rdparty Loggers -->
	<!-- <logger name="org.springframework.core">
		<level value="info" />
	</logger>
	
	<logger name="org.springframework.beans">
		<level value="info" />
	</logger>
	
	<logger name="org.springframework.context">
		<level value="info" />
	</logger>

	<logger name="org.springframework.web">
		<level value="info" />
	</logger> -->

	<!-- Root Logger -->
	<root>
		<priority value="warn" />
		<appender-ref ref="fileLogger" />
	</root>
	
</log4j:configuration>
<!-- <?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration PUBLIC "-//APACHE//DTD LOG4J 1.2//EN" "log4j.dtd">
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

	Appenders
	<appender name="console" class="org.apache.log4j.ConsoleAppender">
		<param name="Target" value="System.out" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-5p: %c - %m%n" />
		</layout>
	</appender>
	
	파일에 로그를 출력할 수 있게 하는 설정
	<appender name="fileLogger" class="org.apache.log4j.DailyRollingFileAppender">
		<param name="file" value="D:/springProject/workspace/testSpringProject/src/main/resources/logs/login.log"/>
	</appender>
	덮어쓰지 않고 추가하도록
	<param name="Append" value="true"/>
	날짜가 바뀌면 확장자명 뒤에 붙을 이름을 날짜로 지정하겠다는 내용
	<param name="DataPattern" value="'-'yyyy-MM-dd"/>
	실제로 로그가 출력될 포맷을 잡아주는 태그
	<layout class="org.apache.log4j.PatternLayout">
		<param name="ConversionPattern" value="[%d{HH:mm:ss}][%-5p](%F:%L) - %m%n"/>
	</layout>
	
	
	Application Loggers
	<logger name="com.test.tsp">
		<level value="info" />
	</logger>

	Root Logger
	<root>
		<priority value="warn" />
		<appender-ref ref="fileLogger" />
	</root>
	

	
	
	
	
	
	
	
	
	
	
	
	
	
</log4j:configuration> -->

